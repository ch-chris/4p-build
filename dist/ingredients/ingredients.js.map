{
  "version": 3,
  "sources": ["../../bin/live-reload.js", "../../src/ingredients/ingredients.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "const form = document.getElementById(\n  'sales-sheet-form'\n) as HTMLFormElement | null;\nconst successEl = document.getElementById(\n  'sales-sheet-success'\n) as HTMLElement | null;\n\nif (form && successEl) {\n  const checkboxEls = Array.from(\n    form.querySelectorAll<HTMLElement>('[data-input]')\n  );\n  const downloadLinks = Array.from(\n    successEl.querySelectorAll<HTMLElement>('[data-product]')\n  );\n  const submitBtn = form.querySelector(\n    '.form-button'\n  ) as HTMLButtonElement | null;\n  const errorMsg = form.querySelector(\n    '.form-checkbox-error'\n  ) as HTMLElement | null;\n\n  if (submitBtn && errorMsg) {\n    const updateLinks = (): void => {\n      checkboxEls.forEach((checkbox) => {\n        const input = checkbox.querySelector<HTMLInputElement>('input');\n        const inputData = checkbox.dataset.input;\n\n        if (!input || !inputData) return;\n\n        const checked = input.checked;\n\n        downloadLinks.forEach((link) => {\n          if (link.dataset.product === inputData) {\n            link.classList.toggle('selected', checked);\n          }\n        });\n      });\n    };\n\n    const isAtLeastOneChecked = (): boolean => {\n      return checkboxEls.some((checkbox) => {\n        const input = checkbox.querySelector<HTMLInputElement>('input');\n        return input?.checked ?? false;\n      });\n    };\n\n    const validateForm = (): void => {\n      if (isAtLeastOneChecked()) {\n        errorMsg.style.display = 'none';\n        submitBtn.disabled = false;\n      } else {\n        errorMsg.style.display = 'block';\n        submitBtn.disabled = true;\n      }\n    };\n\n    form.addEventListener('change', (event) => {\n      if (\n        (event.target as HTMLInputElement).matches('input[type=\"checkbox\"]')\n      ) {\n        updateLinks();\n        validateForm();\n      }\n    });\n\n    submitBtn.addEventListener('click', (event) => {\n      if (!isAtLeastOneChecked()) {\n        event.preventDefault();\n        errorMsg.style.display = 'block';\n      }\n    });\n  }\n}\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACA7F,MAAM,OAAO,SAAS;AAAA,IACpB;AAAA,EACF;AACA,MAAM,YAAY,SAAS;AAAA,IACzB;AAAA,EACF;AAEA,MAAI,QAAQ,WAAW;AACrB,UAAM,cAAc,MAAM;AAAA,MACxB,KAAK,iBAA8B,cAAc;AAAA,IACnD;AACA,UAAM,gBAAgB,MAAM;AAAA,MAC1B,UAAU,iBAA8B,gBAAgB;AAAA,IAC1D;AACA,UAAM,YAAY,KAAK;AAAA,MACrB;AAAA,IACF;AACA,UAAM,WAAW,KAAK;AAAA,MACpB;AAAA,IACF;AAEA,QAAI,aAAa,UAAU;AACzB,YAAM,cAAc,MAAY;AAC9B,oBAAY,QAAQ,CAAC,aAAa;AAChC,gBAAM,QAAQ,SAAS,cAAgC,OAAO;AAC9D,gBAAM,YAAY,SAAS,QAAQ;AAEnC,cAAI,CAAC,SAAS,CAAC;AAAW;AAE1B,gBAAM,UAAU,MAAM;AAEtB,wBAAc,QAAQ,CAAC,SAAS;AAC9B,gBAAI,KAAK,QAAQ,YAAY,WAAW;AACtC,mBAAK,UAAU,OAAO,YAAY,OAAO;AAAA,YAC3C;AAAA,UACF,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAEA,YAAM,sBAAsB,MAAe;AACzC,eAAO,YAAY,KAAK,CAAC,aAAa;AACpC,gBAAM,QAAQ,SAAS,cAAgC,OAAO;AAC9D,iBAAO,OAAO,WAAW;AAAA,QAC3B,CAAC;AAAA,MACH;AAEA,YAAM,eAAe,MAAY;AAC/B,YAAI,oBAAoB,GAAG;AACzB,mBAAS,MAAM,UAAU;AACzB,oBAAU,WAAW;AAAA,QACvB,OAAO;AACL,mBAAS,MAAM,UAAU;AACzB,oBAAU,WAAW;AAAA,QACvB;AAAA,MACF;AAEA,WAAK,iBAAiB,UAAU,CAAC,UAAU;AACzC,YACG,MAAM,OAA4B,QAAQ,wBAAwB,GACnE;AACA,sBAAY;AACZ,uBAAa;AAAA,QACf;AAAA,MACF,CAAC;AAED,gBAAU,iBAAiB,SAAS,CAAC,UAAU;AAC7C,YAAI,CAAC,oBAAoB,GAAG;AAC1B,gBAAM,eAAe;AACrB,mBAAS,MAAM,UAAU;AAAA,QAC3B;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;",
  "names": []
}
